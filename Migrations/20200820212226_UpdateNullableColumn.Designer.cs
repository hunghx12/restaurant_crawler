// <auto-generated />
using System;
using Avengers.WorldSaver;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Avengers.Migrations
{
    [DbContext(typeof(YummyContext))]
    [Migration("20200820212226_UpdateNullableColumn")]
    partial class UpdateNullableColumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Avengers.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AvgRating")
                        .HasColumnType("float");

                    b.Property<string>("AvgRatingText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookingUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContributeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Distance")
                        .HasColumnType("float");

                    b.Property<string>("DistanceText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FAvgRating")
                        .HasColumnType("int");

                    b.Property<int>("FTotalReviews")
                        .HasColumnType("int");

                    b.Property<string>("Floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasBooking")
                        .HasColumnType("bit");

                    b.Property<bool>("HasDelivery")
                        .HasColumnType("bit");

                    b.Property<bool>("HasMemberCard")
                        .HasColumnType("bit");

                    b.Property<bool>("HasPromotion")
                        .HasColumnType("bit");

                    b.Property<bool>("HasVideo")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAds")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBooking")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelivery")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOpening")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRestaurantCollection")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSaved")
                        .HasColumnType("bit");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<int>("ListId")
                        .HasColumnType("int");

                    b.Property<int>("ListOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("LocationUrlRewriteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("LstCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LstCuisine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MainCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("MasterCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("MemberCardDiscount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileBgColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileBookingUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NoteId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PriceMax")
                        .HasColumnType("int");

                    b.Property<string>("PriceMaxDisplay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PriceMin")
                        .HasColumnType("int");

                    b.Property<string>("PriceMinDisplay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PromotionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PromotionPlainTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PromotionTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PromotionUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ResCreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResUrlAlbums")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResUrlReviews")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantStatus")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalCheckIns")
                        .HasColumnType("int");

                    b.Property<int>("TotalFavourites")
                        .HasColumnType("int");

                    b.Property<int>("TotalPictures")
                        .HasColumnType("int");

                    b.Property<string>("TotalPicturesFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalReviews")
                        .HasColumnType("int");

                    b.Property<string>("TotalReviewsFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalSaves")
                        .HasColumnType("int");

                    b.Property<string>("TotalSavesFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalService")
                        .HasColumnType("int");

                    b.Property<int>("TotalViews")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlRewriteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NoteId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Avengers.Models.LstReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AvgRating")
                        .HasColumnType("float");

                    b.Property<string>("AvgRatingText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ReviewId")
                        .HasColumnType("int");

                    b.Property<bool>("ShortReview")
                        .HasColumnType("bit");

                    b.Property<string>("UserAvatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserFoodyId")
                        .HasColumnType("int");

                    b.Property<string>("UserGender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UserVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reviewProfileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reviewUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reviewUserAvatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reviewUserDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("LstReviews");
                });

            modelBuilder.Entity("Avengers.Models.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("Avengers.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BackgroundColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("Avengers.Models.Item", b =>
                {
                    b.HasOne("Avengers.Models.Note", "Note")
                        .WithMany()
                        .HasForeignKey("NoteId");
                });

            modelBuilder.Entity("Avengers.Models.LstReview", b =>
                {
                    b.HasOne("Avengers.Models.Item", null)
                        .WithMany("LstReview")
                        .HasForeignKey("ItemId");
                });

            modelBuilder.Entity("Avengers.Models.Service", b =>
                {
                    b.HasOne("Avengers.Models.Item", null)
                        .WithMany("Services")
                        .HasForeignKey("ItemId");
                });
#pragma warning restore 612, 618
        }
    }
}
